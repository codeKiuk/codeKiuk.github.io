{"version":3,"file":"component---src-templates-blog-post-js-a33b41e7624bb6859cac.js","mappings":"wRAYA,MA+DaA,EAAO,IAAwC,IAArCC,MAAQC,eAAgBC,IAAQ,EACrD,OAAO,QAAC,IAAG,CAACC,MAAOD,EAAKE,YAAYD,MAAOE,YAAaH,EAAKE,YAAYC,aAAeH,EAAKI,SAAW,EAG1G,UAnEyB,IAA8D,UAA3DN,MAAM,SAAEO,EAAQ,KAAEC,EAAI,KAAEC,EAAMR,eAAgBC,IAAQ,EAChF,MAAMQ,GAA6B,QAAjB,EAAAD,EAAKE,oBAAY,aAAjB,EAAmBR,QAAK,QAE1C,OACE,QAAC,IAAS,YACR,QAAC,IAAK,CAACS,OAAQ,CAAC,GAAI,OACpB,QAAC,EAAAC,KAAI,CAACC,GAAG,IAAG,UACV,QAAC,KAAI,CAACC,GAAG,KAAKC,GAAI,CAAEC,QAAS,sBAAuB,SACjDP,OAGL,QAAC,IAAK,CAACE,OAAQ,CAAC,GAAI,OAEpB,mBAASM,UAAU,YAAYC,WAAS,EAACC,SAAS,4BAA2B,WAC3E,QAAC,IAAM,CAACL,GAAG,SAAQ,WACjB,QAAC,KAAI,CAACA,GAAG,KAAKM,SAAS,WAAU,SAC9BnB,EAAKE,YAAYD,SAEpB,QAAC,KAAI,CAACY,GAAG,IAAIC,GAAI,CAAEM,MAAOC,EAAAA,EAAOC,KAAK,CAAC,OAAQ,SAC5CtB,EAAKE,YAAYqB,WAGtB,QAAC,KAAI,CAACV,GAAG,UAAUW,wBAAyB,CAAEC,OAAQzB,EAAK0B,MAAQP,SAAS,iBAC5E,kBAEA,QAAC,IAAM,CAACN,GAAG,SAAQ,UACjB,QAAC,IAAG,UAGR,QAAC,IAAM,CAACA,GAAG,MAAK,UACd,QAAC,IAAG,CACFA,GAAG,KACHC,GAAI,CACFa,SAAU,SACVC,eAAgB,gBAChBC,UAAW,QACX,WAEF,QAAC,IAAG,CAAChB,GAAG,KAAI,SACTR,IACC,QAAC,EAAAM,KAAI,CAACC,GAAIP,EAASyB,OAAOC,KAAMC,IAAI,OAAM,UACxC,QAAC,KAAI,CAACnB,GAAG,KAAKC,GAAI,CAAEM,MAAOC,EAAAA,EAAOC,KAAK,KAAMP,QAAS,sBAAuB,UAAC,KACzEV,EAASH,YAAYD,cAKhC,QAAC,IAAG,CAACY,GAAG,KAAI,SACTP,IACC,QAAC,EAAAK,KAAI,CAACC,GAAIN,EAAKwB,OAAOC,KAAMC,IAAI,OAAM,UACpC,QAAC,KAAI,CAACnB,GAAG,KAAKC,GAAI,CAAEM,MAAOC,EAAAA,EAAOC,KAAK,KAAMP,QAAS,sBAAuB,UAC1ET,EAAKJ,YAAYD,MAAM,kBAOpC,QAAC,IAAK,CAACS,OAAQ,CAAC,GAAI,QACV,C","sources":["webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["import * as React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport { Bio } from '../components/Bio'\nimport { Seo } from '../components/Seo'\nimport { Container } from 'components/common/Container/Container'\nimport { Column } from 'components/common/Column'\nimport { Space } from 'components/common/Space'\nimport { Text } from 'theme-ui'\nimport colors from 'constants/colors'\nimport { Row } from 'components/common/Row'\n\nconst BlogPostTemplate = ({ data: { previous, next, site, markdownRemark: post } }) => {\n  const siteTitle = site.siteMetadata?.title || `Title`\n\n  return (\n    <Container>\n      <Space height={[32, 72]} />\n      <Link to=\"/\">\n        <Text as=\"h3\" sx={{ variant: 'text.heading18bold' }}>\n          {siteTitle}\n        </Text>\n      </Link>\n      <Space height={[32, 72]} />\n\n      <article className=\"blog-post\" itemScope itemType=\"http://schema.org/Article\">\n        <Column as=\"header\">\n          <Text as=\"h1\" itemProp=\"headline\">\n            {post.frontmatter.title}\n          </Text>\n          <Text as=\"p\" sx={{ color: colors.gray[[700]] }}>\n            {post.frontmatter.date}\n          </Text>\n        </Column>\n        <Text as=\"section\" dangerouslySetInnerHTML={{ __html: post.html }} itemProp=\"articleBody\" />\n        <hr />\n\n        <Column as=\"footer\">\n          <Bio />\n        </Column>\n      </article>\n      <Column as=\"nav\">\n        <Row\n          as=\"ul\"\n          sx={{\n            flexWrap: `nowrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n          }}\n        >\n          <Row as=\"li\">\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                <Text as=\"h5\" sx={{ color: colors.gray[700], variant: 'text.heading14bold' }}>\n                  ← {previous.frontmatter.title}\n                </Text>\n              </Link>\n            )}\n          </Row>\n          <Row as=\"li\">\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                <Text as=\"h5\" sx={{ color: colors.gray[700], variant: 'text.heading14bold' }}>\n                  {next.frontmatter.title} →\n                </Text>\n              </Link>\n            )}\n          </Row>\n        </Row>\n      </Column>\n      <Space height={[32, 72]} />\n    </Container>\n  )\n}\n\nexport const Head = ({ data: { markdownRemark: post } }) => {\n  return <Seo title={post.frontmatter.title} description={post.frontmatter.description || post.excerpt} />\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($id: String!, $previousPostId: String, $nextPostId: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["Head","data","markdownRemark","post","title","frontmatter","description","excerpt","previous","next","site","siteTitle","siteMetadata","height","Link","to","as","sx","variant","className","itemScope","itemType","itemProp","color","colors","gray","date","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","fields","slug","rel"],"sourceRoot":""}